From c5ad0fae9c0e1aa8965f1322e011724a10835b87 Mon Sep 17 00:00:00 2001
From: David Hoppenbrouwers <david@salt-inc.org>
Date: Wed, 23 Feb 2022 20:22:07 +0100
Subject: [PATCH 05/45] Implement thread::yield, thread::sleep

---
 library/std/src/sys/norostb/thread.rs | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/library/std/src/sys/norostb/thread.rs b/library/std/src/sys/norostb/thread.rs
index a8db251de20..1f9475515ca 100644
--- a/library/std/src/sys/norostb/thread.rs
+++ b/library/std/src/sys/norostb/thread.rs
@@ -3,6 +3,7 @@
 use crate::io;
 use crate::num::NonZeroUsize;
 use crate::time::Duration;
+use norostb_rt::kernel::syscall;
 
 pub struct Thread(!);
 
@@ -15,15 +16,15 @@ pub unsafe fn new(_stack: usize, _p: Box<dyn FnOnce()>) -> io::Result<Thread> {
     }
 
     pub fn yield_now() {
-        // do nothing
+        syscall::sleep(Duration::ZERO);
     }
 
     pub fn set_name(_name: &CStr) {
         // nope
     }
 
-    pub fn sleep(_dur: Duration) {
-        panic!("can't sleep");
+    pub fn sleep(dur: Duration) {
+        syscall::sleep(dur);
     }
 
     pub fn join(self) {
-- 
2.30.2

