From b4259c8c54feaca1986cb4b567eae85b6b8105e9 Mon Sep 17 00:00:00 2001
From: David Hoppenbrouwers <david@salt-inc.org>
Date: Fri, 10 Jun 2022 13:08:19 +0200
Subject: [PATCH 48/48] Implement std::time::Instant

---
 library/std/src/sys/norostb/time.rs | 24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/library/std/src/sys/norostb/time.rs b/library/std/src/sys/norostb/time.rs
index 6d67b538a96..70e3cc0fcef 100644
--- a/library/std/src/sys/norostb/time.rs
+++ b/library/std/src/sys/norostb/time.rs
@@ -1,7 +1,8 @@
 use crate::time::Duration;
+use norostb_rt::time::Monotonic;
 
 #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug, Hash)]
-pub struct Instant(Duration);
+pub struct Instant(Monotonic);
 
 #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug, Hash)]
 pub struct SystemTime(Duration);
@@ -10,19 +11,32 @@
 
 impl Instant {
     pub fn now() -> Instant {
-        panic!("time not implemented on this platform")
+        Self(Monotonic::now())
     }
 
     pub fn checked_sub_instant(&self, other: &Instant) -> Option<Duration> {
-        self.0.checked_sub(other.0)
+        Duration::from_nanos(self.0.as_nanos())
+            .checked_sub(Duration::from_nanos(other.0.as_nanos()))
     }
 
     pub fn checked_add_duration(&self, other: &Duration) -> Option<Instant> {
-        Some(Instant(self.0.checked_add(*other)?))
+        Duration::from_nanos(self.0.as_nanos())
+            .checked_add(*other)?
+            .as_nanos()
+            .try_into()
+            .ok()
+            .map(Monotonic::from_nanos)
+            .map(Self)
     }
 
     pub fn checked_sub_duration(&self, other: &Duration) -> Option<Instant> {
-        Some(Instant(self.0.checked_sub(*other)?))
+        Duration::from_nanos(self.0.as_nanos())
+            .checked_sub(*other)?
+            .as_nanos()
+            .try_into()
+            .ok()
+            .map(Monotonic::from_nanos)
+            .map(Self)
     }
 }
 
-- 
2.30.2

