From e68891faa10f5a176f7462ad33feb86aa9f43d04 Mon Sep 17 00:00:00 2001
From: David Hoppenbrouwers <david@salt-inc.org>
Date: Mon, 18 Apr 2022 06:40:52 +0200
Subject: [PATCH 19/43] Implement {As,Into,From}Handle for fs::File

---
 library/std/src/os/norostb/io.rs  | 34 +++++++++++++++++++++++++++++++
 library/std/src/os/norostb/mod.rs |  6 ++++++
 library/std/src/sys/norostb/fs.rs |  2 +-
 3 files changed, 41 insertions(+), 1 deletion(-)
 create mode 100644 library/std/src/os/norostb/io.rs

diff --git a/library/std/src/os/norostb/io.rs b/library/std/src/os/norostb/io.rs
new file mode 100644
index 00000000000..dee3f41c70d
--- /dev/null
+++ b/library/std/src/os/norostb/io.rs
@@ -0,0 +1,34 @@
+use crate::sys_common::{AsInner, FromInner, IntoInner};
+use crate::{fs, sys};
+
+pub type Handle = u32;
+
+pub trait AsHandle {
+    fn as_handle(&self) -> Handle;
+}
+
+pub trait IntoHandle {
+    fn into_handle(self) -> Handle;
+}
+
+pub trait FromHandle {
+    unsafe fn from_handle(handle: Handle) -> Self;
+}
+
+impl AsHandle for fs::File {
+    fn as_handle(&self) -> Handle {
+        self.as_inner().handle
+    }
+}
+
+impl IntoHandle for fs::File {
+    fn into_handle(self) -> Handle {
+        self.into_inner().handle
+    }
+}
+
+impl FromHandle for fs::File {
+    unsafe fn from_handle(handle: Handle) -> Self {
+        Self::from_inner(sys::fs::File { handle })
+    }
+}
diff --git a/library/std/src/os/norostb/mod.rs b/library/std/src/os/norostb/mod.rs
index 0ca072765d6..0716f1ed226 100644
--- a/library/std/src/os/norostb/mod.rs
+++ b/library/std/src/os/norostb/mod.rs
@@ -1,8 +1,14 @@
 #![unstable(feature = "norostb", issue = "none")]
 
 pub mod ffi;
+pub mod io;
 
 pub use crate::sys::io::{
     create, finish_job, open, poll, query, query_next, read, seek, take_job, write,
 };
 pub use norostb_rt::kernel::io::{Job, ObjectInfo};
+
+pub mod prelude {
+    use super::*;
+    pub use io::{AsHandle, FromHandle, Handle, IntoHandle};
+}
diff --git a/library/std/src/sys/norostb/fs.rs b/library/std/src/sys/norostb/fs.rs
index e4115c1ef4b..294e433c547 100644
--- a/library/std/src/sys/norostb/fs.rs
+++ b/library/std/src/sys/norostb/fs.rs
@@ -29,7 +29,7 @@
 
 #[derive(Debug)]
 pub struct File {
-    handle: Handle,
+    pub(crate) handle: Handle,
 }
 
 const TABLE_OBJECT_SEPARATOR: u8 = b'/';
-- 
2.30.2

